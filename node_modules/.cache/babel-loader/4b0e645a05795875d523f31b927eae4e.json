{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\C7-Fron3\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { createContext, useEffect } from \"react\"; //export const initialState = {theme: \"\", data: []}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContextGlobal = /*#__PURE__*/createContext();\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context.\n  const [dentists, setDentists] = useState([{}]);\n  const url = \"https://jsonplaceholder.typicode.com/users\";\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => setDentists(data));\n  }, []);\n  console.log(dentists);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      dentists,\n      setDentists\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"XYZs+iW0EGf7H5/VlOaCttOA/J8=\");\n\n_c = ContextProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["useContext","useState","createContext","useEffect","ContextGlobal","ContextProvider","children","dentists","setDentists","url","fetch","then","response","json","data","console","log","useContextGlobal"],"sources":["C:/Users/Dell/C7-Fron3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { createContext, useEffect } from \"react\";\r\n\r\n//export const initialState = {theme: \"\", data: []}\r\n\r\nconst ContextGlobal = createContext();\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context.\r\n  const [dentists, setDentists] = useState([{}])\r\n  \r\n\r\n  const url = \"https://jsonplaceholder.typicode.com/users\"\r\n  \r\n  useEffect(() =>{\r\n    fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => setDentists(data))\r\n  }, [])\r\n  \r\n  console.log(dentists)\r\n\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{dentists, setDentists}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n\r\nexport const useContextGlobal = () => useContext(ContextGlobal)\r\n"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,OAAzC,C,CAEA;;;AAEA,MAAMC,aAAa,gBAAGF,aAAa,EAAnC;AAEA,OAAO,MAAMG,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAxC;EAGA,MAAMQ,GAAG,GAAG,4CAAZ;EAEAN,SAAS,CAAC,MAAK;IACbO,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIN,WAAW,CAACM,IAAD,CAFzB;EAGD,CAJQ,EAIN,EAJM,CAAT;EAMAC,OAAO,CAACC,GAAR,CAAYT,QAAZ;EAGA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACA,QAAD;MAAWC;IAAX,CAA/B;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CArBM;;GAAMD,e;;KAAAA,e;AAuBb,OAAO,MAAMY,gBAAgB,GAAG;EAAA;;EAAA,OAAMjB,UAAU,CAACI,aAAD,CAAhB;AAAA,CAAzB;;IAAMa,gB"},"metadata":{},"sourceType":"module"}